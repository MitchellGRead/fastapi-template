name: Python Tests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    name: Python Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 2.0.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --with dev

      - name: Run code formatting check
        run: |
          poetry run black --check .
          poetry run isort --check .

      - name: Run linting
        run: poetry run flake8 src tests

      - name: Run type checking
        # TODO: Add tests to the type checking
        run: poetry run mypy src

      - name: Run tests with coverage
        run: poetry run pytest --cov=fastapi_template --cov-report=term

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            .pytest_cache/
            .coverage
          retention-days: 5
